/**
 * ðŸ§ª TESTS SIMPLES DE L'API VAMO
 *
 * Tests basiques pour vÃ©rifier que ton backend fonctionne
 * Ces tests ne modifient PAS la base de donnÃ©es
 */

const request = require('supertest');

// URL de ton backend Railway
const BASE_URL = 'https://vamo-backend-production.up.railway.app';

describe('ðŸš€ Tests simples de l\'API Vamo', () => {

    test('âœ… Le backend Railway rÃ©pond correctement', async () => {
        // Test que l'API est accessible
        const response = await request(BASE_URL)
            .get('/');

        console.log(`ðŸ“Š Status: ${response.status}`);

        // Le backend devrait renvoyer quelque chose (200, 404, etc. - peu importe tant qu'il rÃ©pond)
        expect(response.status).toBeDefined();
    }, 10000); // 10 secondes de timeout

    test('âœ… L\'endpoint /api/locations fonctionne', async () => {
        const response = await request(BASE_URL)
            .get('/api/locations');

        console.log(`ðŸ“Š Locations status: ${response.status}`);
        console.log(`ðŸ“Š Nombre de locations: ${response.body?.success ? 'OK' : 'N/A'}`);

        expect(response.status).toBe(200);
    }, 10000);

    test('âœ… Je peux crÃ©er une recherche de course', async () => {
        const testData = {
            origin: {
                description: 'Almadies, Dakar',
                latitude: 14.7167,
                longitude: -17.5000,
                location: { lat: 14.7167, lng: -17.5000 }
            },
            destination: {
                description: 'Plateau, Dakar',
                latitude: 14.6928,
                longitude: -17.4467,
                location: { lat: 14.6928, lng: -17.4467 }
            },
            estimatedFare: {
                amount: 2500,
                currency: 'FCFA'
            }
        };

        const response = await request(BASE_URL)
            .post('/api/trips/search')
            .send(testData);

        console.log(`ðŸ“Š Search status: ${response.status}`);
        console.log(`ðŸ“Š Response:`, response.body);

        expect(response.status).toBe(200);
        expect(response.body.success).toBe(true);
        expect(response.body.searchId).toBeDefined();
    }, 10000);

});
